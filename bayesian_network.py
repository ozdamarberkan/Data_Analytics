# -*- coding: utf-8 -*-
"""bayesian_network.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qFY9ecdTBzwYEZuEdpNuoZpJUTtZkaj_
"""

!pip install scikit-survival
!pip install bnlearn

# If using colab, restart runtime after packages are installed

import bnlearn as bn
import pandas as pd
import numpy as np

# Sometimes it works when ran twice

import sksurv
import sksurv.datasets

'''
Variable 	Name		Description			                Codes / Values
*******************************************************************************************************
1		     id		    Identification Number			    1 - 500
2		    age		    Age at Hospital Admission		    Years
3 	    	gender		Gender 					            0 = Male, 1 = Female
4    		hr		    Initial Heart Rate			        Beats per minute
5		    sysbp		Initial Systolic Blood Pressure 	mmHg
6	    	diasbp		Initial Diastolic Blood Pressure	mmHg
7    		bmi		    Body Mass Index			 	        kg/m^2
8		    cvd		    History of Cardiovascular Disease	0 = No, 1 = Yes						
9		    afb		    Atrial Fibrillation			        0 = No, 1 = Yes						
10  		sho		    Cardiogenic Shock			        0 = No, 1 = Yes						
11  		chf		    Congestive Heart Complications		0 = No, 1 = Yes						
12  		av3		    Complete Heart Block			    0 = No, 1 = Yes				
13  		miord		MI Order 				            0 = First, 1 = Recurrent
14  		mitype		MI Type 				            0 = non Q-wave, 1 = Q-wave
15  		year		Cohort Year				            1 = 1997, 2 = 1999, 3 = 2001				
16  		admitdate	Hospital Admission Date 		    mm/dd/yyyy
17  		disdate		Hospital Discharge Date 		    mm/dd/yyyy
18  		fdate		Date of last Follow Up 			    mm/dd/yyyy
19  		los		    Length of Hospital Stay			    Days from Hospital Admission
								 	                            to Hospital Discharge
20 	    	dstat		Discharge Status from Hospital		0 = Alive, 1 = Dead
21	    	lenfol		Total Length of Follow-up		    Days from Hospital Admission Date
									                            to Date of Last Follow-up 
22	    	event		Vital Status at Last Follow-up		0 = Alive 1 = Dead
'''

# load data
data, labels = sksurv.datasets.load_whas500()

print(data.columns)

# total admission date + total follow up days
data['event'] = [label[0] for label in labels]
# data['time'] = [x.days for x in data.time]
data = data.astype(np.int32)
data.head()

import tabulate

DAG = bn.structure_learning.fit(data, methodtype='hc', scoretype='bic')

DAG = bn.independence_test(DAG, data, alpha=0.05, prune=True)
print(DAG['independence_test'])

# print adjacency matrix
print(DAG['adjmat'])

# Interactive plotting
G = bn.plot(DAG, interactive = True)



DAG_2 = bn.structure_learning.fit(data, methodtype='hc', scoretype='k2')

DAG_2 = bn.independence_test(DAG_2, data, alpha=0.05, prune=True)
print(DAG_2['independence_test'])
# print adjacency matrix
print(DAG_2['adjmat'])

# Interactive plotting
G = bn.plot(DAG_2, interactive = True)

DAG_2 = bn.structure_learning.fit(data, methodtype='hc', scoretype='k2')

DAG_cs_1 = bn.structure_learning.fit(data, methodtype='cs', scoretype='bic')

# print adjacency matrix
print(DAG_cs_1['adjmat'])

# Interactive plotting
G = bn.plot(DAG_cs_1, interactive = True)

DAG_cs_2 = bn.structure_learning.fit(data, methodtype='cs', scoretype='k2')

# print adjacency matrix
print(DAG_cs_2['adjmat'])

# Interactive plotting
G = bn.plot(DAG_cs_2, interactive = True)

bn.compare_networks(DAG, DAG_2)

# Parameter learning on the user-defined DAG and input data using maximumlikelihood
model_mle = bn.parameter_learning.fit(DAG, data, methodtype='maximumlikelihood')

# Print the learned CPDs
bn.plot(model_mle, interactive=True)

# Parameter learning on the user-defined DAG and input data using Bayes
model_bayes = bn.parameter_learning.fit(DAG, data, methodtype='bayes')

# Print the learned CPDs
bn.plot(model_bayes, interactive=True)

q1 = bn.inference.fit(model_bayes, variables=['event'], evidence={'sho':0})
print(q1.df)